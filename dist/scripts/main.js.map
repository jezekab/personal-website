{"version":3,"names":[],"mappings":"","sources":["main.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\nvar React     = require('react');\nvar Router = require('react-router'); \nvar History = Router.HistoryLocation;\nvar RouteHandler = Router.RouteHandler; \n\nvar Routes = require('./routes.jsx');\n\nRouter.run(Routes, History, function(Handler){\n  React.render(React.createElement(Handler, null), document.getElementById('grandeur'));\n});\n\n\n},{\"./routes.jsx\":14,\"react\":\"react\",\"react-router\":\"react-router\"}],2:[function(require,module,exports){\n/* jslint node: true */\n'use strict';\nvar Reflux = require('reflux');\n\nvar MenuActions = Reflux.createActions({\n\t\"loadPages\": {asyncResult: true}\n});\n\nmodule.exports = MenuActions;\n\n\n},{\"reflux\":\"reflux\"}],3:[function(require,module,exports){\n/* jslint node: true */\n'use strict';\nvar Reflux = require('reflux');\n\nvar PageActions = Reflux.createActions({\n\t\"loadPage\": {asyncResult: true}\n});\n\nmodule.exports = PageActions;\n\n\n},{\"reflux\":\"reflux\"}],4:[function(require,module,exports){\n'use strict';\nvar React     = require('react');\nvar RouteHandler = require('react-router').RouteHandler; \n\nvar Menu   = require('./Menu/Menu.jsx');\n\nvar App = React.createClass({displayName: \"App\",\n  render: function(){\n    return (\n      React.createElement(\"div\", null, \n        React.createElement(Menu, null), \n        React.createElement(RouteHandler, null)\n      )\n      )\n  }\n});\n\nmodule.exports = App;\n\n\n},{\"./Menu/Menu.jsx\":6,\"react\":\"react\",\"react-router\":\"react-router\"}],5:[function(require,module,exports){\n'use strict';\nvar React = require('react');\n\nvar Blackout = React.createClass({displayName: \"Blackout\",\n\trender: function() {\n\t\treturn (\n\t\t\tReact.createElement(\"div\", {className: \"pjt-blackout visible-xs\"})\n\t\t);\n\t}\n});\n\nmodule.exports = Blackout;\n\n\n},{\"react\":\"react\"}],6:[function(require,module,exports){\n'use strict';\nvar React = require('react');\nvar MenuBar   = require('./MenuBar.jsx');\nvar Blackout\t= require('./Blackout.jsx');\nvar SideMenu  = require('./SideMenu.jsx');\n\nvar Menu = React.createClass({displayName: \"Menu\",\n\tgetInitialState: function() {\n\t\treturn {\n\t\t\tmenuState: 'closed',\n\t\t\tmenuHeight: {height: 0},\n\t\t\tmenuClass: ''\n\t\t};\n\t},\n\topenMenu: function() {\n\t    this.setState({\n\t    \tmenuHeight: {height: 380}, \n\t    \tmenuState: 'open', \n\t    \tmenuClass: 'pjt-view menu-open'\n\t    });\n\t},\n\tcloseMenu: function() {\n\t    this.setState({\n\t    \tmenuHeight: {height: 0}, \n\t    \tmenuState: 'closed', \n\t    \tmenuClass: 'pjt-view'\n\t    });\n\t},\n\tresetMenu: function() {\n// \t\t$('body').removeClass('menu-open');\n// \t\t$container.removeClass('menu-open');\n\t},\n\thandleMenuToggle: function(event) {\n\t\tif(this.state.menuState == 'closed'){\n\t\t\tthis.openMenu();\n\t\t\tsetTimeout(this.handleMenuToggle, 1750);\n\t\t} else {\n\t\t\tthis.closeMenu();\n\t\t}\n\t},\n\trender: function() {\n\t\tvar menuHeight = this.state.menuHeight;\n\t\tvar menuClass = this.state.menuClass;\n\t\treturn (\n\t\t\tReact.createElement(\"div\", {className: menuClass}, \n\t        \tReact.createElement(MenuBar, {onClick: this.handleMenuToggle}), \n\t        \tReact.createElement(Blackout, null), \n\t    \t\tReact.createElement(SideMenu, {onClick: this.handleMenuToggle, menuHeight: menuHeight})\n\t\t\t)\n\t\t);\n\t}\n});\n\nmodule.exports = Menu;\n\n\n},{\"./Blackout.jsx\":5,\"./MenuBar.jsx\":7,\"./SideMenu.jsx\":10,\"react\":\"react\"}],7:[function(require,module,exports){\n'use strict';\nvar React = require('react');\n\nvar MenuBar = React.createClass({displayName: \"MenuBar\",\n\trender: function() {\n\t\treturn (\n\t\t\tReact.createElement(\"div\", {className: \"pjt-menu-bar visible-xs\"}, \n\t\t\t    React.createElement(\"a\", {className: \"menu-toggle menu-left\", onClick: this.props.onClick}, \n\t\t\t        React.createElement(\"div\", {className: \"patty\"}\n\t\t\t        )\n\t\t\t    ), \n\t\t    \tReact.createElement(\"a\", {href: \"\", className: \"pjt-logo-xs\"}, \n\t\t    \t\tReact.createElement(\"img\", {src: \"\", alt: \"\", title: \"\"})\n\t    \t\t), \n\t    \t\tReact.createElement(\"a\", {href: \"\", className: \"menu-right\"}, \"Right\")\n    \t\t) \n\t\t);\n\t}\n});\n\nmodule.exports = MenuBar;\n\n},{\"react\":\"react\"}],8:[function(require,module,exports){\n'use strict';\nvar React = require('react/addons');\nvar Router = require('react-router');\nvar Link = Router.Link;\n\nvar MenuEntry =  React.createClass({displayName: \"MenuEntry\",\n    render: function() {\n\t  \tswitch(this.props.menu.type) {\n\t\t\tcase 'post':\n\t\t\t\tvar link = React.createElement(Link, {to: \"post\", params: {slug: this.props.menu.slug}}, this.props.menu.title);\n\t\t\t\tbreak;\n\t\t\tcase 'page':\n\t\t\t\tvar link = React.createElement(Link, {to: \"page\", params: {slug: this.props.menu.slug}}, this.props.menu.title);\n\t\t\t\tbreak;\n\t  \t\tdefault:\n\t  \t\t\tvar link = React.createElement(Link, {to: \"page\", params: {slug: this.props.menu.slug}}, this.props.menu.title);\n\t  \t\t\tbreak;\n\t  \t} \n        return (\n\t\t\tReact.createElement(\"li\", null, link)\n        );\n    }\n});\n\nmodule.exports = MenuEntry;\n\n\n},{\"react-router\":\"react-router\",\"react/addons\":\"react/addons\"}],9:[function(require,module,exports){\n'use strict';\nvar React     = require('react');\nvar MenuEntry  = require('./MenuEntry.jsx');\n\n// Router\nvar Router = require('react-router'); // or var Router = ReactRouter; in browsers\nvar Route = Router.Route;\nvar Link = Router.Link;\nvar DefaultRoute = Router.DefaultRoute;\nvar NotFoundRoute = Router.NotFoundRoute;\nvar RouteHandler = Router.RouteHandler;\n\n// Components\n// var Menu   = require('./Menu/Menu.jsx');\n// var MenuStore = require('../stores/MenuStore.js');\n\nvar MenuList = React.createClass({displayName: \"MenuList\",\n    propTypes: {\n        menuItems: React.PropTypes.arrayOf(React.PropTypes.object).isRequired,\n    },\n    createEntry: function(page) {\n        return (\n            React.createElement(MenuEntry, {key: page.ID, menu: page})\n        );\n    },\n    render: function() {     \n        return (\n            React.createElement(\"div\", null,  this.props.menuItems.map(this.createEntry) )\n        );\n    }\n});\n\nmodule.exports = MenuList;\n\n\n},{\"./MenuEntry.jsx\":8,\"react\":\"react\",\"react-router\":\"react-router\"}],10:[function(require,module,exports){\n'use strict';\nvar React = require('react');\nvar Reflux    = require('reflux');\n\nvar MenuList  = require('./MenuList.jsx');\nvar MenuStore = require('../../stores/MenuStore.js');\nvar MenuActions      = require('../../actions/MenuActions.js');\n\nvar SideMenu = React.createClass({displayName: \"SideMenu\",\n\tmixins: [Reflux.connect(MenuStore,\"menuItems\")],\n\trender: function() {\n\t\treturn (\n\t\t\tReact.createElement(\"nav\", {className: \"pjt-menu\"}, \n\t\t\t    React.createElement(\"div\", {className: \"primary-menu\"}, \n\t\t\t        React.createElement(\"a\", {href: \"\", className: \"pjt-logo\"}, \n\t\t\t        \tReact.createElement(\"img\", {src: \"\", alt: \"\", title: \"\"})\n\t\t\t        ), \n\t\t\t        React.createElement(\"ul\", {className: \"list-unstyled\", style: this.props.menuHeight}, \n\t\t\t        \tReact.createElement(MenuList, {menuItems: this.state.menuItems})\n\t\t\t        ), \n\t\t\t        React.createElement(\"div\", {className: \"menu-pull visible-sm\", onClick: this.props.onClick}, \n\t\t\t            React.createElement(\"div\", {className: \"patty\"})\n\t\t\t        )\n\t\t\t    )\n\t\t\t)\n\t\t);\n\t}\n});\n\nMenuActions.loadPages();\n\nmodule.exports = SideMenu;\n\n\n},{\"../../actions/MenuActions.js\":2,\"../../stores/MenuStore.js\":15,\"./MenuList.jsx\":9,\"react\":\"react\",\"reflux\":\"reflux\"}],11:[function(require,module,exports){\n'use strict';\nvar React = require('react');\nvar Reflux      = require('reflux');\n\nvar SinglePage  = require('./SinglePage.jsx');\nvar PageStore = require('../../stores/PageStore.js');\nvar PageActions      = require('../../actions/PageActions.js');\n\nvar Page = React.createClass({displayName: \"Page\",\n\tmixins: [\n\t\t\tReflux.connect(PageStore,\"page\")\n\t\t],\n\tgetInitialState: function() {\n\t\t// Check our localstorage cache, we may as well load from there if we have it\n\t\tif(window.localStorage.getItem(this.constructor.displayName)) {\n\t\t\treturn JSON.parse(window.localStorage.getItem(this.constructor.displayName));\n\t\t}\n\n\t\t// Nothing in the cache, return empty strings for now\n\t\treturn {\n\t\t\tpage: []\n\t\t};\n\t},\n\n\t/**\n\t * Sets the localstorage state, and continues on to set the state of the React component\n\t * \n\t * @param data\n\t */\n\tsetLocalState: function(data) {\n\t\t// Store in LocalStorage\n\t\t// window.localStorage.setItem(this.constructor.displayName, JSON.stringify(data));\n\n\t\t// Store in Component State\n\t\tthis.setState(data);\n\t},\n\n\n\trender: function () {\n\t\treturn (\n\t\t\tReact.createElement(\"div\", null\n\t\t\t)\n\t\t);\n\t}\n});\n\nmodule.exports = Page;\n\n\n},{\"../../actions/PageActions.js\":3,\"../../stores/PageStore.js\":16,\"./SinglePage.jsx\":12,\"react\":\"react\",\"reflux\":\"reflux\"}],12:[function(require,module,exports){\n'use strict';\nvar React = require('react');\n\nvar SinglePage = React.createClass({displayName: \"SinglePage\",\n\tgetInitialState: function() {\n\t\t// Check our localstorage cache, we may as well load from there if we have it\n\t\tif(window.localStorage.getItem(this.constructor.displayName)) {\n\t\t\treturn JSON.parse(window.localStorage.getItem(this.constructor.displayName));\n\t\t}\n\n\t\t// Nothing in the cache, return empty strings for now\n\t\treturn {\n\t\t\tpage: []\n\t\t};\n\t},\n\n\t/**\n\t * Sets the localstorage state, and continues on to set the state of the React component\n\t * \n\t * @param data\n\t */\n\tsetLocalState: function(data) {\n\t\t// Store in LocalStorage\n\t\twindow.localStorage.setItem(this.constructor.displayName, JSON.stringify(data));\n\n\t\t// Store in Component State\n\t\tthis.setState(data);\n\t},\n\n\n\trender: function () {\n\t\treturn (\n\t\t\tReact.createElement(\"div\", null\n\t\t\t\t\n\t\t\t)\n\t\t);\n\t}\n});\n\nmodule.exports = SinglePage;\n\n\n},{\"react\":\"react\"}],13:[function(require,module,exports){\n'use strict';\nvar React = require('react');\n\nvar SinglePost = React.createClass({displayName: \"SinglePost\",\n\t// mixins: [Reflux.connect(MenuStore,\"menuItems\")],\n\tgetInitialState: function() {\n\t\t// Check our localstorage cache, we may as well load from there if we have it\n\t\tif(window.localStorage.getItem(this.constructor.displayName)) {\n\t\t\treturn JSON.parse(window.localStorage.getItem(this.constructor.displayName));\n\t\t}\n\n\t\t// Nothing in the cache, return empty strings for now\n\t\treturn {\n\t\t\tposts: []\n\t\t};\n\t},\n\n\t/**\n\t * Sets the localstorage state, and continues on to set the state of the React component\n\t * \n\t * @param data\n\t */\n\tsetLocalState: function(data) {\n\t\t// Store in LocalStorage\n\t\twindow.localStorage.setItem(this.constructor.displayName, JSON.stringify(data));\n\n\t\t// Store in Component State\n\t\tthis.setState(data);\n\t},\n\n\n\trender: function () {\n\t\treturn (\n\t\t\tReact.createElement(\"div\", null\n\t\t\t)\n\t\t);\n\t}\n});\n\nmodule.exports = SinglePost;\n\n\n},{\"react\":\"react\"}],14:[function(require,module,exports){\n'use strict';\nvar React     = require('react');\n\n// // Router\nvar Router = require('react-router'); // or var Router = ReactRouter; in browsers\nvar Route = Router.Route;\n// var Link = Router.Link;\nvar DefaultRoute = Router.DefaultRoute;\n// var NotFoundRoute = Router.NotFoundRoute;\n// var RouteHandler = Router.RouteHandler;\n\n// // Components\n\n// var NotFound404 = require('./components/NotFound404.jsx');\n\n// var Posts = require('./components/Posts/Posts.jsx');\n\n\n// var App = require('./components/App.jsx');\n// var Home = require('./components/Home.jsx');\n\nvar App = require('./components/App.jsx');\n\nvar Page = require('./components/Pages/Page.jsx');\n\nvar SinglePost = require('./components/Posts/SinglePost.jsx');\n\n// var App = React.createClass({\n//   render: function(){\n//     return (\n//       <div>\n//       \t<Menu />\n//         <RouteHandler />\n//       </div>\n//       )\n//   }\n// });\n\nvar Routes = (\n  React.createElement(Route, {path: \"/\", handler: App}, \n    React.createElement(DefaultRoute, {handler: App}), \n    React.createElement(Route, {name: \"page\", path: \":slug\", handler: Page}), \n    React.createElement(Route, {name: \"post\", path: \":slug\", handler: SinglePost})\n  )\n);\n\nmodule.exports = Routes;\n\n\t// <Route name=\"grandeur\" path=\"/\" handler={App}>\n\t// \t<DefaultRoute handler={Home} />\n\t// </Route>\n// var el = document.getElementById(\"grandeur\");\n// Router.run(routes, function (Handler) {\n//     React.render(<Handler/>, el)\n// });\n\n\t\t// <Route name=\"posts\">\n\n\t\t// \t<Route handler={Posts} />\n\n\t\t// \t<Route name=\"post\" path=\"/posts/:slug\" handler={SinglePost} />\n\n\t\t// </Route>\n\n\t\t// \n\n\t //  \t<Route name=\"404\" handler={NotFound404} />\n\n\t //  \t<NotFoundRoute handler={NotFound404} />\n\n// var el = document.getElementById(\"grandeur\");\n// // // var el = document.body;\n// Router.run(routes, function (Handler) {\n//   ReactDOM.render(<Handler />, el);\n// });\n\n\n},{\"./components/App.jsx\":4,\"./components/Pages/Page.jsx\":11,\"./components/Posts/SinglePost.jsx\":13,\"react\":\"react\",\"react-router\":\"react-router\"}],15:[function(require,module,exports){\n/* jslint node: true */\n/* global WP_API_Settings */\n'use strict';\nvar Reflux      = require('reflux');\nvar WP          = require( 'wordpress-rest-api' );\nvar wp          = new WP({endpoint: WP_API_Settings.root});\n\nvar MenuActions = require('../actions/MenuActions.js');\n\nvar localStorageKey = 'menu-items';\n\nvar MenuStore = Reflux.createStore({\n    listenables: [MenuActions],\n    pages: [],\n    onLoadPages: function() {\n    \twp.pages()\n    \t\t.then(function(data) {\n    \t\t\tMenuActions.loadPages.completed(data);\n    \t\t})\n    \t\t.catch(function(err) {\n    \t\t\tMenuActions.loadPages.failed(err);\n    \t\t});\n    },\n    onLoadPagesCompleted: function(data) {\n       // nested sorting utility function\n       var sort = function (prop, arr) {\n            prop = prop.split('.');\n            var len = prop.length;\n\n            arr.sort(function (a, b) {\n                var i = 0;\n                while( i < len ) { a = a[prop[i]]; b = b[prop[i]]; i++; }\n                if (a < b) {\n                    return -1;\n                } else if (a > b) {\n                    return 1;\n                } else {\n                    return 0;\n                }\n            });\n            return arr;\n        };\n        // sort pages by menu order\n        var pages = sort('menu_order', data);\n        localStorage.setItem(localStorageKey, JSON.stringify(pages));\n\t\tthis.trigger(this.pages = pages);\n    },\n    onLoadPagesFailed: function(err) {\n    \tthis.trigger(this.pages = []);\n    },\n    getInitialState: function() {\n    \treturn this.pages;\n    }\n});\n\nmodule.exports = MenuStore;\n\n\n},{\"../actions/MenuActions.js\":2,\"reflux\":\"reflux\",\"wordpress-rest-api\":\"wordpress-rest-api\"}],16:[function(require,module,exports){\n/* jslint node: true */\n/* global WP_API_Settings */\n'use strict';\nvar Reflux      = require('reflux');\nvar Router = require('react-router');\nvar WP          = require( 'wordpress-rest-api' );\nvar wp          = new WP({endpoint: WP_API_Settings.root});\n\nvar PageActions = require('../actions/PageActions.js');\n\nvar localStorageKey = 'page';\n\nvar PageStore = Reflux.createStore({\n    mixins: [\n            Router.State,\n            Router.Navigation\n        ],\n    listenables: [PageActions],\n    page: [],\n    onLoadPages: function() {\n        console.log(this.getParams().slug);\n    \t// wp.page()\n    \t// \t.then(function(data) {\n    \t// \t\tPageActions.loadPages.completed(data);\n    \t// \t})\n    \t// \t.catch(function(err) {\n    \t// \t\tPageActions.loadPages.failed(err);\n    \t// \t});\n    },\n    onLoadPageCompleted: function(data) {\n        var page = data;\n        // localStorage.setItem(localStorageKey, JSON.stringify(page));\n\t\tthis.trigger(this.page = page);\n    },\n    onLoadPageFailed: function(err) {\n    \tthis.trigger(this.page = []);\n    },\n    getInitialState: function() {\n    \treturn this.page;\n    }\n});\n\nmodule.exports = PageStore;\n\n\n},{\"../actions/PageActions.js\":3,\"react-router\":\"react-router\",\"reflux\":\"reflux\",\"wordpress-rest-api\":\"wordpress-rest-api\"}]},{},[1]);\n"],"file":"main.js","sourceRoot":"/source/"}